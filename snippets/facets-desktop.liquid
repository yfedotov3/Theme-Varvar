{% comment %}
    Renders facets (filtering and sorting)
    Accepts:
    - results: {Object} Collection or Search object
    - enable_filtering: {Boolean} Show filtering when true
    - enable_sorting: {Boolean} Show sorting when true
    - collapse_on_larger_devices: {Boolean} Collapse filtering/sorting into menu on larger devices when true
    Usage:
    {% render 'facets', results: collection, enable_filtering: true, enable_sorting: true, collapse_on_larger_devices: false %}
{% endcomment %}

{%- if enable_filtering -%}
	{%- unless results.products.size == 0 -%}
		<facet-filters-form class="facets-desktop-container facets">
			<sticky-scroller>
				<form id="FacetFiltersForm" class="facets__form sticky-scroller--element">
					{%- if results.terms -%}
						<input type="hidden" name="q" value="{{ results.terms | escape }}">
						<input name="options[prefix]" type="hidden" value="last">
					{%- endif -%}
					{% if results.current_vendor or results.current_type %}
						<input type="hidden" name="q" value="{{ results.current_vendor }}{{ results.current_type }}">
					{% endif %}
					<div class="facets__wrapper">
						{%- for filter in results.filters -%}
							{%- liquid
									assign label = filter.label | downcase | replace: ' ', '-' | escape
									assign slug = filter.label | downcase | escape

									assign is_open = true 
									if filters_collapsed
										assign is_open = false
										if filter.active_values.size > 0
											assign is_open = true
										endif
									endif

									assign box_filter = false
									assign box_filter_list_array = box_filter_list | newline_to_br | split: '<br />'
									assign box_filter_key_array = ''
									assign box_filter_val_array = ''

									for box_filter in box_filter_list_array
										assign key = box_filter | split: ':' | first | rstrip
										assign value = box_filter | split: ':' | last | lstrip
										assign box_filter_key_array = box_filter_key_array | append: ',' | append: key
										assign box_filter_val_array = box_filter_val_array | append: ',' | append: value
									endfor

									assign box_filter_key_array = box_filter_key_array | remove_first: ',' | strip_newlines | split: ','
									assign box_filter_val_array = box_filter_val_array | remove_first: ',' | split: ','

									for box_filter_key in box_filter_key_array
										if box_filter_key == filter.label
											assign box_filter = true
											assign box_filter_column = box_filter_val_array[forloop.index0]
										endif
									endfor
								-%}
							{% case filter.type %}
								{% when 'boolean' or 'list' %}
								<collapsible-row data-index="{{ forloop.index }}">
									<details class="thb-filter js-filter" {%- if is_open %} open{%- endif -%}>
										<summary class="thb-filter-title">{{ filter.label | escape }}<span>{%- render 'svg-icons' with 'thb-collapsible-arrow' -%}</span></summary>
										<div class="thb-filter-content collapsible__content">
											{%- if filter.param_name == 'filter.v.availability' -%}
												<div class="thb-filter-availability">
													{%- assign value = filter.values[0] -%}
													<input type="checkbox"
														name="{{ value.param_name }}"
														value="{{ value.value }}"
														class="thb-filter-switch custom-checkbox"
														id="Filter-{{ label }}-{{ forloop.index }}"
														{% if value.active %}checked{% endif %}
														{% if value.count == 0 and value.active == false %}disabled{% endif %}
													>
													<label for="Filter-{{ label }}-{{ forloop.index }}">{{ value.label }}</label>
												</div>
											{%- else -%}
												<scroll-shadow>
													{%- liquid
														if slug contains 'color' or slug contains 'colour' or slug contains 'couleur' or slug contains 'farbe'
															if filter_color_swatches
																assign slug = 'color'
															else
																assign slug = ''
															endif
														endif

														# Additional swatch variant options set inside theme settings
														assign color_swatches_variant_option = settings.color_swatches_variant_option | downcase | split: ', '

														if color_swatches_variant_option contains slug
															assign slug = 'color'
														endif

														if filter.presentation == 'swatch'
															assign slug = 'color'
														endif
													-%}
													<ul class="{{ filter.type | escape }}-{{ slug }}{% if box_filter %} list--boxed{% endif %}"{% if box_filter %} style="--max-boxes: {{ box_filter_column }}"{% endif %}>
														{%- liquid
														assign custom_colors = settings.color_swatches | newline_to_br | split: '<br />'
														assign key_array = ''
														assign val_array = ''

														for color in custom_colors
															assign key = color | split: ':' | first | rstrip
															assign value = color | split: ':' | last | lstrip
															assign key_array = key_array | append: ',' | append: key
															assign val_array = val_array | append: ',' | append: value
														endfor

														assign key_array = key_array | remove_first: ',' | strip_newlines | downcase | split: ','
														assign val_array = val_array | remove_first: ',' | split: ','

														assign sorted_values = filter.values
														# Keep the selected values grouped together when operator is AND
														if filter.operator == 'AND'
															assign active_filter_values = filter.values | where: 'active', true
															assign inactive_filter_values = filter.values | where: 'active', false
															assign sorted_values = active_filter_values | concat: inactive_filter_values
														endif
														-%}
														{%- for value in sorted_values -%}
															<li>
																<input type="checkbox"
																	name="{{ value.param_name }}"
																	value="{{ value.value }}"
																	id="Filter-{{ label }}-{{ forloop.index }}"
																	{% if value.active %}checked{% endif %}
																	{% if value.count == 0 and value.active == false %}disabled{% endif %}
																>
																{%- if filter.presentation == 'swatch' -%}
																	{%- liquid
																		assign bg_value = empty
																		assign color_value = value.swatch.color

																		if value.swatch.image
																			assign bg_value = value.swatch.image | image_url: width: 40
																		endif

																	-%}
																	<label
																		for="Filter-{{ label }}-{{ forloop.index }}"
																		class="facet-checkbox {% if value.count == 0 and value.active == false %} facet-checkbox--disabled{% endif %}"
																		style="--bg-color: {{ color_value }}; {%- unless bg_value == empty -%}--option-color-image: url('{{ bg_value }}'){%- endunless -%};"
																		data-tooltip="{{ value.label | escape }} ({{ value.count }})"
																	>
																		<span class="filter-color"></span>
																		<span class="filter-name">{{ value.label | escape }}</span>  {% if show_counts -%}<sup class="count">{{ value.count }}</sup>{%- endif -%}
																	</label>
																{%- else -%}
																	{%- liquid
																		assign color_value = value.value | downcase | escape

																		for custom_color in key_array
																			if custom_color == color_value
																				assign color_value = val_array[forloop.index0]
																			endif
																		endfor

																		assign bg_value = false
																		if color_value contains '.'
																			assign bg_value = color_value | file_url
																			assign color_value = 'var(--bg-body)'
																		endif
																	-%}
																	<label for="Filter-{{ label }}-{{ forloop.index }}" class="facet-checkbox{% if value.count == 0 and value.active == false %} facet-checkbox--disabled{% endif %}" style="--bg-color: {{ color_value | downcase | escape }};{%- if bg_value -%} --option-color-image: url('{{ bg_value | escape }}');{%- endif -%}" data-tooltip="{{ value.label | escape }} ({{ value.count }})">
																		<span class="filter-color"></span>
																		<span class="filter-name">{{- value.label | escape }}</span> {% if show_counts %}<span class="count">({{ value.count }})</span>{% endif %}
																	</label>
																	{%- endif -%}
															</li>
														{%- endfor -%}
													</ul>
												</scroll-shadow>
											{%- endif -%}
										</div>
									</details>
								</collapsible-row>
								{% when 'price_range' %}
								<collapsible-row data-index="{{ forloop.index }}">
									{%- liquid
										assign is_open = true 
										if filters_collapsed
											assign is_open = false
											if filter.min_value.value != nil or filter.max_value.value != nil
												assign is_open = true
											endif
										endif
									-%}
									<details class="thb-filter js-filter" data-index="{{ forloop.index }}" {%- if is_open %} open{%- endif -%}>
										<summary class="thb-filter-title">{{ filter.label | escape }}<span>{%- render 'svg-icons' with 'thb-collapsible-arrow' -%}</span></summary>
										<div class="thb-filter-content collapsible__content">
											<div class="{{ filter.type | escape }} {{ filter.type | escape }}-{{ filter.label | downcase | escape }}">
											{% render 'facets-price-range', filter: filter %}	
											</div>
										</div>
									</details>
								</collapsible-row>
							{% endcase %}
						{%- endfor -%}
					</div>
				</form>
			</sticky-scroller>
		</facet-filters-form>
		<script src="{{ 'sticky-scroller.js' | asset_url }}" defer="defer"></script>
	{%- endunless -%}
{%- endif -%}
